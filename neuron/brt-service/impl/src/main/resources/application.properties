# Server port (overridden by Docker Compose)
server.port=8082

# PostgreSQL Database Settings
spring.datasource.url=jdbc:postgresql://localhost:5432/billing_db
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driverClassName=org.postgresql.Driver

# JPA / Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate # Liquibase handles schema creation/updates
spring.jpa.show-sql=false 
# Liquibase
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml
spring.liquibase.enabled=true

# RabbitMQ settings (can be overridden by Docker Compose environment variables)
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=user
spring.rabbitmq.password=password

# RabbitMQ: Consuming from CDR Generator
rabbitmq.queue.name=cdr_queue # Must match the queue cdr-generator sends to
rabbitmq.exchange.name=cdr_exchange # Must match the exchange cdr-generator sends to
rabbitmq.routing.key.name=cdr_routing_key # Must match the routing key cdr-generator uses

# RabbitMQ: Sending rating requests to HRS
rabbitmq.exchange.hrs.name=hrs_exchange
rabbitmq.routing.key.hrs.name=hrs_rating_key

# RabbitMQ: Consuming rating responses from HRS
rabbitmq.queue.hrs_response.name=hrs_response_queue
# This queue (hrs_response_queue) needs to be declared, and bound to an exchange that HRS publishes to.
# Let's assume HRS publishes to hrs_exchange with a specific routing key for responses, e.g., hrs_response_key
rabbitmq.routing.key.hrs_response.name=hrs_response_key

# Jackson ObjectMapper for AMQP messages (Spring Boot provides a default one)
# If specific configuration is needed for (de)serialization of DTOs like CallDataDto, RatingResponseDto
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.datatype.jsr310.deserialization.date-time-format=yyyy-MM-dd'T'HH:mm:ss

# Logging
logging.level.com.example.brtservice=INFO
logging.level.org.springframework.amqp=INFO
logging.level.org.springframework.transaction=WARN
logging.level.liquibase=INFO 